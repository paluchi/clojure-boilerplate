
Testing problems.problem-3

FAIL in (test-subtotal) (NO_SOURCE_FILE:7)
Subtotal with no discount
expected: (= (subtotal #:invoice-item{:precise-quantity 10, :precise-price 5}) 50)
  actual: (not (= 50.0 50))

FAIL in (test-subtotal) (NO_SOURCE_FILE:12)
Subtotal with a positive discount
expected: (= (subtotal #:invoice-item{:precise-quantity 10, :precise-price 5, :discount-rate 10}) 45)
  actual: (not (= 45.0 45))

FAIL in (test-subtotal) (NO_SOURCE_FILE:18)
Subtotal with 100% discount
expected: (= (subtotal #:invoice-item{:precise-quantity 10, :precise-price 5, :discount-rate 100}) 0)
  actual: (not (= 0.0 0))

FAIL in (test-subtotal) (NO_SOURCE_FILE:24)
Subtotal with different quantities and prices
expected: (= (subtotal #:invoice-item{:precise-quantity 3, :precise-price 20, :discount-rate 25}) 45)
  actual: (not (= 45.0 45))

FAIL in (test-subtotal) (NO_SOURCE_FILE:30)
Subtotal with negative discount
expected: (= (subtotal #:invoice-item{:precise-quantity 5, :precise-price 10, :discount-rate -10}) 50)
  actual: (not (= 55.00000000000001 50))

FAIL in (test-subtotal) (NO_SOURCE_FILE:36)
Subtotal with no discount-rate key
expected: (= (subtotal #:invoice-item{:precise-quantity 2, :precise-price 15}) 30)
  actual: (not (= 30.0 30))

Ran 1 tests containing 6 assertions.
6 failures, 0 errors.
{:test 1, :pass 0, :fail 6, :error 0, :type :summary}
clj꞉problems.problem-3꞉> 
#'problems.problem-3/test-subtotal
clj꞉problems.problem-3꞉> 

Testing problems.problem-3

FAIL in (test-subtotal) (NO_SOURCE_FILE:7)
Subtotal with no discount
expected: (= (subtotal #:invoice-item{:precise-quantity 10, :precise-price 5, :discount-rate 0}) 50)
  actual: (not (= 50.0 50))

FAIL in (test-subtotal) (NO_SOURCE_FILE:13)
Subtotal with a positive discount
expected: (= (subtotal #:invoice-item{:precise-quantity 10, :precise-price 5, :discount-rate 10}) 45)
  actual: (not (= 45.0 45))

FAIL in (test-subtotal) (NO_SOURCE_FILE:19)
Subtotal with 100% discount
expected: (= (subtotal #:invoice-item{:precise-quantity 10, :precise-price 5, :discount-rate 100}) 0)
  actual: (not (= 0.0 0))

FAIL in (test-subtotal) (NO_SOURCE_FILE:25)
Subtotal with different quantities and prices
expected: (= (subtotal #:invoice-item{:precise-quantity 3, :precise-price 20, :discount-rate 25}) 45)
  actual: (not (= 45.0 45))

FAIL in (test-subtotal) (NO_SOURCE_FILE:31)
Subtotal with negative discount
expected: (= (subtotal #:invoice-item{:precise-quantity 5, :precise-price 10, :discount-rate -10}) 50)
  actual: (not (= 55.00000000000001 50))

FAIL in (test-subtotal) (NO_SOURCE_FILE:37)
Subtotal with no discount-rate key
expected: (= (subtotal #:invoice-item{:precise-quantity 2, :precise-price 15}) 30)
  actual: (not (= 30.0 30))

Ran 1 tests containing 6 assertions.
6 failures, 0 errors.
{:test 1, :pass 0, :fail 6, :error 0, :type :summary}
clj꞉problems.problem-3꞉> 

Testing problems.problem-3

FAIL in (test-subtotal) (NO_SOURCE_FILE:7)
Subtotal with no discount
expected: (= (subtotal #:invoice-item{:precise-quantity 10, :precise-price 5, :discount-rate 0}) 50)
  actual: (not (= 50.0 50))

FAIL in (test-subtotal) (NO_SOURCE_FILE:13)
Subtotal with a positive discount
expected: (= (subtotal #:invoice-item{:precise-quantity 10, :precise-price 5, :discount-rate 10}) 45)
  actual: (not (= 45.0 45))

FAIL in (test-subtotal) (NO_SOURCE_FILE:19)
Subtotal with 100% discount
expected: (= (subtotal #:invoice-item{:precise-quantity 10, :precise-price 5, :discount-rate 100}) 0)
  actual: (not (= 0.0 0))

FAIL in (test-subtotal) (NO_SOURCE_FILE:25)
Subtotal with different quantities and prices
expected: (= (subtotal #:invoice-item{:precise-quantity 3, :precise-price 20, :discount-rate 25}) 45)
  actual: (not (= 45.0 45))

FAIL in (test-subtotal) (NO_SOURCE_FILE:31)
Subtotal with negative discount
expected: (= (subtotal #:invoice-item{:precise-quantity 5, :precise-price 10, :discount-rate -10}) 50)
  actual: (not (= 55.00000000000001 50))

FAIL in (test-subtotal) (NO_SOURCE_FILE:37)
Subtotal with no discount-rate key
expected: (= (subtotal #:invoice-item{:precise-quantity 2, :precise-price 15}) 30)
  actual: (not (= 30.0 30))

Ran 1 tests containing 6 assertions.
6 failures, 0 errors.
{:test 1, :pass 0, :fail 6, :error 0, :type :summary}
clj꞉problems.problem-3꞉> 

Testing problems.problem-3

FAIL in (test-subtotal) (NO_SOURCE_FILE:7)
Subtotal with no discount
expected: (= (subtotal #:invoice-item{:precise-quantity 10, :precise-price 5, :discount-rate 0}) 50)
  actual: (not (= 50.0 50))

FAIL in (test-subtotal) (NO_SOURCE_FILE:13)
Subtotal with a positive discount
expected: (= (subtotal #:invoice-item{:precise-quantity 10, :precise-price 5, :discount-rate 10}) 45)
  actual: (not (= 45.0 45))

FAIL in (test-subtotal) (NO_SOURCE_FILE:19)
Subtotal with 100% discount
expected: (= (subtotal #:invoice-item{:precise-quantity 10, :precise-price 5, :discount-rate 100}) 0)
  actual: (not (= 0.0 0))

FAIL in (test-subtotal) (NO_SOURCE_FILE:25)
Subtotal with different quantities and prices
expected: (= (subtotal #:invoice-item{:precise-quantity 3, :precise-price 20, :discount-rate 25}) 45)
  actual: (not (= 45.0 45))

FAIL in (test-subtotal) (NO_SOURCE_FILE:31)
Subtotal with negative discount
expected: (= (subtotal #:invoice-item{:precise-quantity 5, :precise-price 10, :discount-rate -10}) 50)
  actual: (not (= 55.00000000000001 50))

FAIL in (test-subtotal) (NO_SOURCE_FILE:37)
Subtotal with no discount-rate key
expected: (= (subtotal #:invoice-item{:precise-quantity 2, :precise-price 15}) 30)
  actual: (not (= 30.0 30))

Ran 1 tests containing 6 assertions.
6 failures, 0 errors.
{:test 1, :pass 0, :fail 6, :error 0, :type :summary}
clj꞉problems.problem-3꞉> 
#'problems.problem-3/test-subtotal
clj꞉problems.problem-3꞉> 

Testing problems.problem-3

FAIL in (test-subtotal) (NO_SOURCE_FILE:31)
Subtotal with negative discount
expected: (= (subtotal #:invoice-item{:precise-quantity 5, :precise-price 10, :discount-rate -10}) 50.0)
  actual: (not (= 55.00000000000001 50.0))

Ran 1 tests containing 6 assertions.
1 failures, 0 errors.
{:test 1, :pass 5, :fail 1, :error 0, :type :summary}
clj꞉problems.problem-3꞉> 
#'problems.problem-3/test-subtotal
clj꞉problems.problem-3꞉> 

Testing problems.problem-3

FAIL in (test-subtotal) (NO_SOURCE_FILE:31)
Subtotal with negative discount
expected: (= (subtotal #:invoice-item{:precise-quantity 5, :precise-price 10, :discount-rate -10}) 50.00000000000001)
  actual: (not (= 55.00000000000001 50.00000000000001))

Ran 1 tests containing 6 assertions.
1 failures, 0 errors.
{:test 1, :pass 5, :fail 1, :error 0, :type :summary}
clj꞉problems.problem-3꞉> 
#'problems.problem-3/test-subtotal
clj꞉problems.problem-3꞉> 

Testing problems.problem-3

Ran 1 tests containing 6 assertions.
0 failures, 0 errors.
{:test 1, :pass 6, :fail 0, :error 0, :type :summary}
clj꞉problems.problem-3꞉> 
#'problems.problem-3/test-subtotal
clj꞉problems.problem-3꞉> 

Testing problems.problem-3

Ran 1 tests containing 6 assertions.
0 failures, 0 errors.
{:test 1, :pass 6, :fail 0, :error 0, :type :summary}
clj꞉problems.problem-3꞉> 
#'problems.problem-3/test-subtotal
clj꞉problems.problem-3꞉> 

Testing problems.problem-3

Ran 1 tests containing 6 assertions.
0 failures, 0 errors.
{:test 1, :pass 6, :fail 0, :error 0, :type :summary}
clj꞉problems.problem-3꞉> 
nil
clj꞉problems.problem-2꞉> 
#'problems.problem-2/transform-json-to-spec
clj꞉problems.problem-2꞉> 
; Syntax error compiling at (src/problems/problem_2.clj:32:19).
; No such var: utils/validate-against-spec
clj꞉problems.problem-2꞉> 
; Syntax error compiling at (src/problems/problem_2.clj:32:19).
; No such var: utils/validate-against-spec
clj꞉problems.problem-2꞉> 
; Syntax error compiling at (src/problems/problem_2.clj:32:19).
; No such var: utils/validate-against-spec
clj꞉problems.problem-2꞉> 
nil
clj꞉utils.utils꞉> 
nil
clj꞉utils.utils꞉> 
#'utils.utils/validate-against-spec
clj꞉utils.utils꞉> 
#'problems.problem-2/process-invoice-file
clj꞉problems.problem-2꞉> 
#function[problems.problem-2/process-invoice-file/fn--9943]
clj꞉problems.problem-2꞉> 
#'problems.problem-2/process-invoice-file
clj꞉problems.problem-2꞉> 
#function[problems.problem-2/process-invoice-file/fn--9948]
clj꞉problems.problem-2꞉> 
#'problems.problem-2/process-invoice-file
clj꞉problems.problem-2꞉> 
#'problems.problem-2/validated-invoice
clj꞉problems.problem-2꞉> 
#function[problems.problem-2/process-invoice-file/fn--9953]
nil
clj꞉problems.problem-2꞉> 
An error occurred during processing:
nil
nil
; clojure.lang.ArityException: Wrong number of args (0) passed to: problems.problem-2/process-invoice-file/fn--9953
; 	at clojure.lang.AFn.throwArity(AFn.java:429)
; 	at clojure.lang.AFn.invoke(AFn.java:28)
; 	at clojure.lang.AFn.applyToHelper(AFn.java:152)
; 	at clojure.lang.AFn.applyTo(AFn.java:144)
; 	at clojure.core$apply.invokeStatic(core.clj:667)
; 	at clojure.core$apply.invoke(core.clj:662)
; 	at utils.utils$with_error_handling.invokeStatic(NO_SOURCE_FILE:8)
; 	at utils.utils$with_error_handling.doInvoke(NO_SOURCE_FILE:6)
; 	at clojure.lang.RestFn.invoke(RestFn.java:410)
; 	at problems.problem_2$eval9958.invokeStatic(NO_SOURCE_FILE:36)
; 	at problems.problem_2$eval9958.invoke(NO_SOURCE_FILE:36)
; 	at clojure.lang.Compiler.eval(Compiler.java:7181)
; 	at clojure.lang.Compiler.eval(Compiler.java:7136)
; 	at clojure.core$eval.invokeStatic(core.clj:3202)
; 	at clojure.core$eval.invoke(core.clj:3198)
; 	at nrepl.middleware.interruptible_eval$evaluate$fn__1265$fn__1266.invoke(interruptible_eval.clj:87)
; 	at clojure.lang.AFn.applyToHelper(AFn.j
; ava:152)
; 	at clojure.lang.AFn.applyTo(AFn.java:144)
; 	at clojure.core$apply.invokeStatic(core.clj:667)
; 	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1977)
; 	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1977)
; 	at clojure.lang.RestFn.invoke(RestFn.java:425)
; 	at nrepl.middleware.interruptible_eval$evaluate$fn__1265.invoke(interruptible_eval.clj:87)
; 	at clojure.main$repl$read_eval_print__9110$fn__9113.invoke(main.clj:437)
; 	at clojure.main$repl$read_eval_print__9110.invoke(main.clj:437)
; 	at clojure.main$repl$fn__9119.invoke(main.clj:458)
; 	at clojure.main$repl.invokeStatic(main.clj:458)
; 	at clojure.main$repl.doInvoke(main.clj:368)
; 	at clojure.lang.RestFn.invoke(RestFn.java:1523)
; 	at nrepl.middleware.interruptible_eval$evaluate.invokeStatic(interruptible_eval.clj:84)
; 	at nrepl.middleware.interruptible_eval$evaluate.invoke(interruptible_eval.clj:56)
; 	at nrepl.middleware.interruptible_eval$interruptible_eval$fn__1298$fn__1302.invoke(interruptible_eval.clj:152)
; 	at clojure.lang.AFn.run(AFn.java:22)
; 
; 	at nrepl.middleware.session$session_exec$main_loop__1368$fn__1372.invoke(session.clj:218)
; 	at nrepl.middleware.session$session_exec$main_loop__1368.invoke(session.clj:217)
; 	at clojure.lang.AFn.run(AFn.java:22)
; 	at java.base/java.lang.Thread.run(Thread.java:1583)
clj꞉problems.problem-2꞉> 
#'problems.problem-2/process-invoice-file
clj꞉problems.problem-2꞉> 
#function[problems.problem-2/process-invoice-file/fn--9960]
clj꞉problems.problem-2꞉> 
#function[problems.problem-2/process-invoice-file/fn--9960]
clj꞉problems.problem-2꞉> 
#'problems.problem-2/process-invoice-file
clj꞉problems.problem-2꞉> 
nil
clj꞉problems.problem-2꞉> 
#'problems.problem-2/process-invoice-file
clj꞉problems.problem-2꞉> 
#function[problems.problem-2/process-invoice-file/fn--9972]
clj꞉problems.problem-2꞉> 
#'problems.problem-2/process-invoice-file
clj꞉problems.problem-2꞉> 
#:invoice{:issue-date #object[java.time.Instant 0x1efc7f35 "2020-10-13T00:00:00Z"],
          :customer #:customer{:name "ANDRADE RODRIGUEZ MANUEL ALEJANDRO", :email "cgallegoaecu@gmail.com"},
          :items
          [#:invoice-item{:price 10000.0, :quantity 1.0, :sku "SUPER-1", :taxes [#:tax{:category :iva, :rate 5.0}]}
           #:invoice-item{:price 20000.0, :quantity 1.0, :sku "SUPER-2", :taxes [#:tax{:category :iva, :rate 19.0}]}
           #:invoice-item{:price 30000.0, :quantity 1.0, :sku "SUPER-3", :taxes [#:tax{:category :iva, :rate 19.0}]}]}
clj꞉problems.problem-2꞉> 
true
clj꞉problems.problem-3꞉> 
true
clj꞉problems.problem-3꞉> 
#'problems.problem-3/test-subtotal
clj꞉problems.problem-3꞉> 

Testing problems.problem-3

Ran 1 tests containing 8 assertions.
0 failures, 0 errors.
{:test 1, :pass 8, :fail 0, :error 0, :type :summary}
clj꞉problems.problem-3꞉> 
#'problems.problem-3/test-subtotal
clj꞉problems.problem-3꞉> 

Testing problems.problem-3

FAIL in (test-subtotal) (NO_SOURCE_FILE:69)
Subtotal with zero quantity and non-zero discount
expected: (= (subtotal #:invoice-item{:precise-quantity 0, :precise-price 10, :discount-rate 20}) 0)
  actual: (not (= 0.0 0))

FAIL in (test-subtotal) (NO_SOURCE_FILE:75)
Subtotal with discount rate near 100%
expected: (= (subtotal #:invoice-item{:precise-quantity 1, :precise-price 100, :discount-rate 99.99}) 0.01)
  actual: (not (= 0.010000000000010001 0.01))

ERROR in (test-subtotal) (Numbers.java:1068)
Subtotal with nil values
expected: (= (subtotal #:invoice-item{:precise-quantity nil, :precise-price nil, :discount-rate nil}) 0)
  actual: java.lang.NullPointerException: Cannot invoke "Object.getClass()" because "x" is null
 at clojure.lang.Numbers.ops (Numbers.java:1068)
    clojure.lang.Numbers.multiply (Numbers.java:173)
    invoice_item$subtotal.invokeStatic (NO_SOURCE_FILE:11)
    invoice_item$subtotal.invoke (NO_SOURCE_FILE:7)
    problems.problem_3$fn__10035.invokeStatic (NO_SOURCE_FILE:81)
    problems.problem_3/fn (NO_SOURCE_FILE:5)
    clojure.test$test_var$fn__9761.invoke (test.clj:717)
    clojure.test$test_var.invokeStatic (test.clj:717)
    clojure.test$test_var.invoke (test.clj:708)
    clojure.test$test_vars$fn__9787$fn__9792.invoke (test.clj:735)
    clojure.test$default_fixture.invokeStatic (test.clj:687)
    clojure.test$default_fixture.invoke (test.clj:683)
    clojure.test$test_vars$fn__9787.invoke (test.clj:735)
    clojure.test$default_fixture.invokeStatic (test.clj:687)
    clojure.test$default_fixture.invoke (test.clj:683)
    clojure.test$test_vars.invokeStatic (test.clj:731)
    clojure.test$test_all_vars.invokeStatic (test.clj:737)
    clojure.test$test_ns.invokeStatic (test.clj:758)
    clojure.test$test_ns.invoke (test.clj:743)
    clojure.core$map$fn__5884.invoke (core.clj:2759)
    clojure.lang.LazySeq.sval (LazySeq.java:42)
    clojure.lang.LazySeq.seq (LazySeq.java:51)
    clojure.lang.Cons.next (Cons.java:39)
    clojure.lang.RT.boundedLength (RT.java:1793)
    clojure.lang.RestFn.applyTo (RestFn.java:130)
    clojure.core$apply.invokeStatic (core.clj:669)
    clojure.test$run_tests.invokeStatic (test.clj:768)
    clojure.test$run_tests.doInvoke (test.clj:768)
    clojure.lang.RestFn.invoke (RestFn.java:408)
    clojure.test$run_tests.invokeStatic (test.clj:773)
    clojure.test$run_tests.invoke (test.clj:768)
    problems.problem_3$eval10090.invokeStatic (NO_SOURCE_FILE:89)
    problems.problem_3$eval10090.invoke (NO_SOURCE_FILE:89)
    clojure.lang.Compiler.eval (Compiler.java:7181)
    clojure.lang.Compiler.eval (Compiler.java:7136)
    clojure.core$eval.invokeStatic (core.clj:3202)
    clojure.core$eval.invoke (core.clj:3198)
    nrepl.middleware.interruptible_eval$evaluate$fn__1265$fn__1266.invoke (interruptible_eval.clj:87)
    clojure.lang.AFn.applyToHelper (AFn.java:152)
    clojure.lang.AFn.applyTo (AFn.java:144)
    clojure.core$apply.invokeStatic (core.clj:667)
    clojure.core$with_bindings_STAR_.invokeStatic (core.clj:1977)
    clojure.core$with_bindings_STAR_.doInvoke (core.clj:1977)
    clojure.lang.RestFn.invoke (RestFn.java:425)
    nrepl.middleware.interruptible_eval$evaluate$fn__1265.invoke (interruptible_eval.clj:87)
    clojure.main$repl$read_eval_print__9110$fn__9113.invoke (main.clj:437)
    clojure.main$repl$read_eval_print__9110.invoke (main.clj:437)
    clojure.main$repl$fn__9119.invoke (main.clj:458)
    clojure.main$repl.invokeStatic (main.clj:458)
    clojure.main$repl.doInvoke (main.clj:368)
    clojure.lang.RestFn.invoke (RestFn.java:1523)
    nrepl.middleware.interruptible_eval$evaluate.invokeStatic (interruptible_eval.clj:84)
    nrepl.middleware.interruptible_eval$evaluate.invoke (interruptible_eval.clj:56)
    nrepl.middleware.interruptible_eval$interruptible_eval$fn__1298$fn__1302.invoke (interruptible_eval.clj:152)
    clojure.lang.AFn.run (AFn.java:22)
    nrepl.middleware.session$session_exec$main_loop__1368$fn__1372.invoke (session.clj:218)
    nrepl.middleware.session$session_exec$main_loop__1368.invoke (session.clj:217)
    clojure.lang.AFn.run (AFn.java:22)
    java.lang.Thread.run (Thread.java:1583)

Ran 1 tests containing 14 assertions.
2 failures, 1 errors.
{:test 1, :pass 11, :fail 2, :error 1, :type :summary}
clj꞉problems.problem-3꞉> 
#'problems.problem-3/test-subtotal
clj꞉problems.problem-3꞉> 

Testing problems.problem-3

FAIL in (test-subtotal) (NO_SOURCE_FILE:75)
Subtotal with discount rate near 100%
expected: (= (subtotal #:invoice-item{:precise-quantity 1, :precise-price 100, :discount-rate 99.99}) 0.01)
  actual: (not (= 0.010000000000010001 0.01))

ERROR in (test-subtotal) (Numbers.java:1068)
Subtotal with nil values
expected: (= (subtotal #:invoice-item{:precise-quantity nil, :precise-price nil, :discount-rate nil}) 0.0)
  actual: java.lang.NullPointerException: Cannot invoke "Object.getClass()" because "x" is null
 at clojure.lang.Numbers.ops (Numbers.java:1068)
    clojure.lang.Numbers.multiply (Numbers.java:173)
    invoice_item$subtotal.invokeStatic (NO_SOURCE_FILE:11)
    invoice_item$subtotal.invoke (NO_SOURCE_FILE:7)
    problems.problem_3$fn__10092.invokeStatic (NO_SOURCE_FILE:81)
    problems.problem_3/fn (NO_SOURCE_FILE:5)
    clojure.test$test_var$fn__9761.invoke (test.clj:717)
    clojure.test$test_var.invokeStatic (test.clj:717)
    clojure.test$test_var.invoke (test.clj:708)
    clojure.test$test_vars$fn__9787$fn__9792.invoke (test.clj:735)
    clojure.test$default_fixture.invokeStatic (test.clj:687)
    clojure.test$default_fixture.invoke (test.clj:683)
    clojure.test$test_vars$fn__9787.invoke (test.clj:735)
    clojure.test$default_fixture.invokeStatic (test.clj:687)
    clojure.test$default_fixture.invoke (test.clj:683)
    clojure.test$test_vars.invokeStatic (test.clj:731)
    clojure.test$test_all_vars.invokeStatic (test.clj:737)
    clojure.test$test_ns.invokeStatic (test.clj:758)
    clojure.test$test_ns.invoke (test.clj:743)
    clojure.core$map$fn__5884.invoke (core.clj:2759)
    clojure.lang.LazySeq.sval (LazySeq.java:42)
    clojure.lang.LazySeq.seq (LazySeq.java:51)
    clojure.lang.Cons.next (Cons.java:39)
    clojure.lang.RT.boundedLength (RT.java:1793)
    clojure.lang.RestFn.applyTo (RestFn.java:130)
    clojure.core$apply.invokeStatic (core.clj:669)
    clojure.test$run_tests.invokeStatic (test.clj:768)
    clojure.test$run_tests.doInvoke (test.clj:768)
    clojure.lang.RestFn.invoke (RestFn.java:408)
    clojure.test$run_tests.invokeStatic (test.clj:773)
    clojure.test$run_tests.invoke (test.clj:768)
    problems.problem_3$eval10147.invokeStatic (NO_SOURCE_FILE:89)
    problems.problem_3$eval10147.invoke (NO_SOURCE_FILE:89)
    clojure.lang.Compiler.eval (Compiler.java:7181)
    clojure.lang.Compiler.eval (Compiler.java:7136)
    clojure.core$eval.invokeStatic (core.clj:3202)
    clojure.core$eval.invoke (core.clj:3198)
    nrepl.middleware.interruptible_eval$evaluate$fn__1265$fn__1266.invoke (interruptible_eval.clj:87)
    clojure.lang.AFn.applyToHelper (AFn.java:152)
    clojure.lang.AFn.applyTo (AFn.java:144)
    clojure.core$apply.invokeStatic (core.clj:667)
    clojure.core$with_bindings_STAR_.invokeStatic (core.clj:1977)
    clojure.core$with_bindings_STAR_.doInvoke (core.clj:1977)
    clojure.lang.RestFn.invoke (RestFn.java:425)
    nrepl.middleware.interruptible_eval$evaluate$fn__1265.invoke (interruptible_eval.clj:87)
    clojure.main$repl$read_eval_print__9110$fn__9113.invoke (main.clj:437)
    clojure.main$repl$read_eval_print__9110.invoke (main.clj:437)
    clojure.main$repl$fn__9119.invoke (main.clj:458)
    clojure.main$repl.invokeStatic (main.clj:458)
    clojure.main$repl.doInvoke (main.clj:368)
    clojure.lang.RestFn.invoke (RestFn.java:1523)
    nrepl.middleware.interruptible_eval$evaluate.invokeStatic (interruptible_eval.clj:84)
    nrepl.middleware.interruptible_eval$evaluate.invoke (interruptible_eval.clj:56)
    nrepl.middleware.interruptible_eval$interruptible_eval$fn__1298$fn__1302.invoke (interruptible_eval.clj:152)
    clojure.lang.AFn.run (AFn.java:22)
    nrepl.middleware.session$session_exec$main_loop__1368$fn__1372.invoke (session.clj:218)
    nrepl.middleware.session$session_exec$main_loop__1368.invoke (session.clj:217)
    clojure.lang.AFn.run (AFn.java:22)
    java.lang.Thread.run (Thread.java:1583)

Ran 1 tests containing 14 assertions.
1 failures, 1 errors.
{:test 1, :pass 12, :fail 1, :error 1, :type :summary}
clj꞉problems.problem-3꞉> 

Testing problems.problem-3

FAIL in (test-subtotal) (NO_SOURCE_FILE:75)
Subtotal with discount rate near 100%
expected: (= (subtotal #:invoice-item{:precise-quantity 1, :precise-price 100, :discount-rate 99.99}) 0.01)
  actual: (not (= 0.010000000000010001 0.01))

ERROR in (test-subtotal) (Numbers.java:1068)
Subtotal with nil values
expected: (= (subtotal #:invoice-item{:precise-quantity nil, :precise-price nil, :discount-rate nil}) 0.0)
  actual: java.lang.NullPointerException: Cannot invoke "Object.getClass()" because "x" is null
 at clojure.lang.Numbers.ops (Numbers.java:1068)
    clojure.lang.Numbers.multiply (Numbers.java:173)
    invoice_item$subtotal.invokeStatic (NO_SOURCE_FILE:11)
    invoice_item$subtotal.invoke (NO_SOURCE_FILE:7)
    problems.problem_3$fn__10092.invokeStatic (NO_SOURCE_FILE:81)
    problems.problem_3/fn (NO_SOURCE_FILE:5)
    clojure.test$test_var$fn__9761.invoke (test.clj:717)
    clojure.test$test_var.invokeStatic (test.clj:717)
    clojure.test$test_var.invoke (test.clj:708)
    clojure.test$test_vars$fn__9787$fn__9792.invoke (test.clj:735)
    clojure.test$default_fixture.invokeStatic (test.clj:687)
    clojure.test$default_fixture.invoke (test.clj:683)
    clojure.test$test_vars$fn__9787.invoke (test.clj:735)
    clojure.test$default_fixture.invokeStatic (test.clj:687)
    clojure.test$default_fixture.invoke (test.clj:683)
    clojure.test$test_vars.invokeStatic (test.clj:731)
    clojure.test$test_all_vars.invokeStatic (test.clj:737)
    clojure.test$test_ns.invokeStatic (test.clj:758)
    clojure.test$test_ns.invoke (test.clj:743)
    clojure.core$map$fn__5884.invoke (core.clj:2759)
    clojure.lang.LazySeq.sval (LazySeq.java:42)
    clojure.lang.LazySeq.seq (LazySeq.java:51)
    clojure.lang.Cons.next (Cons.java:39)
    clojure.lang.RT.boundedLength (RT.java:1793)
    clojure.lang.RestFn.applyTo (RestFn.java:130)
    clojure.core$apply.invokeStatic (core.clj:669)
    clojure.test$run_tests.invokeStatic (test.clj:768)
    clojure.test$run_tests.doInvoke (test.clj:768)
    clojure.lang.RestFn.invoke (RestFn.java:408)
    clojure.test$run_tests.invokeStatic (test.clj:773)
    clojure.test$run_tests.invoke (test.clj:768)
    problems.problem_3$eval10149.invokeStatic (NO_SOURCE_FILE:89)
    problems.problem_3$eval10149.invoke (NO_SOURCE_FILE:89)
    clojure.lang.Compiler.eval (Compiler.java:7181)
    clojure.lang.Compiler.eval (Compiler.java:7136)
    clojure.core$eval.invokeStatic (core.clj:3202)
    clojure.core$eval.invoke (core.clj:3198)
    nrepl.middleware.interruptible_eval$evaluate$fn__1265$fn__1266.invoke (interruptible_eval.clj:87)
    clojure.lang.AFn.applyToHelper (AFn.java:152)
    clojure.lang.AFn.applyTo (AFn.java:144)
    clojure.core$apply.invokeStatic (core.clj:667)
    clojure.core$with_bindings_STAR_.invokeStatic (core.clj:1977)
    clojure.core$with_bindings_STAR_.doInvoke (core.clj:1977)
    clojure.lang.RestFn.invoke (RestFn.java:425)
    nrepl.middleware.interruptible_eval$evaluate$fn__1265.invoke (interruptible_eval.clj:87)
    clojure.main$repl$read_eval_print__9110$fn__9113.invoke (main.clj:437)
    clojure.main$repl$read_eval_print__9110.invoke (main.clj:437)
    clojure.main$repl$fn__9119.invoke (main.clj:458)
    clojure.main$repl.invokeStatic (main.clj:458)
    clojure.main$repl.doInvoke (main.clj:368)
    clojure.lang.RestFn.invoke (RestFn.java:1523)
    nrepl.middleware.interruptible_eval$evaluate.invokeStatic (interruptible_eval.clj:84)
    nrepl.middleware.interruptible_eval$evaluate.invoke (interruptible_eval.clj:56)
    nrepl.middleware.interruptible_eval$interruptible_eval$fn__1298$fn__1302.invoke (interruptible_eval.clj:152)
    clojure.lang.AFn.run (AFn.java:22)
    nrepl.middleware.session$session_exec$main_loop__1368$fn__1372.invoke (session.clj:218)
    nrepl.middleware.session$session_exec$main_loop__1368.invoke (session.clj:217)
    clojure.lang.AFn.run (AFn.java:22)
    java.lang.Thread.run (Thread.java:1583)

Ran 1 tests containing 14 assertions.
1 failures, 1 errors.
{:test 1, :pass 12, :fail 1, :error 1, :type :summary}
clj꞉problems.problem-3꞉> 
#'problems.problem-3/test-subtotal
clj꞉problems.problem-3꞉> 

Testing problems.problem-3

ERROR in (test-subtotal) (Numbers.java:1068)
Subtotal with nil values
expected: (= (subtotal #:invoice-item{:precise-quantity nil, :precise-price nil, :discount-rate nil}) 0.0)
  actual: java.lang.NullPointerException: Cannot invoke "Object.getClass()" because "x" is null
 at clojure.lang.Numbers.ops (Numbers.java:1068)
    clojure.lang.Numbers.multiply (Numbers.java:173)
    invoice_item$subtotal.invokeStatic (NO_SOURCE_FILE:11)
    invoice_item$subtotal.invoke (NO_SOURCE_FILE:7)
    problems.problem_3$fn__10151.invokeStatic (NO_SOURCE_FILE:81)
    problems.problem_3/fn (NO_SOURCE_FILE:5)
    clojure.test$test_var$fn__9761.invoke (test.clj:717)
    clojure.test$test_var.invokeStatic (test.clj:717)
    clojure.test$test_var.invoke (test.clj:708)
    clojure.test$test_vars$fn__9787$fn__9792.invoke (test.clj:735)
    clojure.test$default_fixture.invokeStatic (test.clj:687)
    clojure.test$default_fixture.invoke (test.clj:683)
    clojure.test$test_vars$fn__9787.invoke (test.clj:735)
    clojure.test$default_fixture.invokeStatic (test.clj:687)
    clojure.test$default_fixture.invoke (test.clj:683)
    clojure.test$test_vars.invokeStatic (test.clj:731)
    clojure.test$test_all_vars.invokeStatic (test.clj:737)
    clojure.test$test_ns.invokeStatic (test.clj:758)
    clojure.test$test_ns.invoke (test.clj:743)
    clojure.core$map$fn__5884.invoke (core.clj:2759)
    clojure.lang.LazySeq.sval (LazySeq.java:42)
    clojure.lang.LazySeq.seq (LazySeq.java:51)
    clojure.lang.Cons.next (Cons.java:39)
    clojure.lang.RT.boundedLength (RT.java:1793)
    clojure.lang.RestFn.applyTo (RestFn.java:130)
    clojure.core$apply.invokeStatic (core.clj:669)
    clojure.test$run_tests.invokeStatic (test.clj:768)
    clojure.test$run_tests.doInvoke (test.clj:768)
    clojure.lang.RestFn.invoke (RestFn.java:408)
    clojure.test$run_tests.invokeStatic (test.clj:773)
    clojure.test$run_tests.invoke (test.clj:768)
    problems.problem_3$eval10206.invokeStatic (NO_SOURCE_FILE:89)
    problems.problem_3$eval10206.invoke (NO_SOURCE_FILE:89)
    clojure.lang.Compiler.eval (Compiler.java:7181)
    clojure.lang.Compiler.eval (Compiler.java:7136)
    clojure.core$eval.invokeStatic (core.clj:3202)
    clojure.core$eval.invoke (core.clj:3198)
    nrepl.middleware.interruptible_eval$evaluate$fn__1265$fn__1266.invoke (interruptible_eval.clj:87)
    clojure.lang.AFn.applyToHelper (AFn.java:152)
    clojure.lang.AFn.applyTo (AFn.java:144)
    clojure.core$apply.invokeStatic (core.clj:667)
    clojure.core$with_bindings_STAR_.invokeStatic (core.clj:1977)
    clojure.core$with_bindings_STAR_.doInvoke (core.clj:1977)
    clojure.lang.RestFn.invoke (RestFn.java:425)
    nrepl.middleware.interruptible_eval$evaluate$fn__1265.invoke (interruptible_eval.clj:87)
    clojure.main$repl$read_eval_print__9110$fn__9113.invoke (main.clj:437)
    clojure.main$repl$read_eval_print__9110.invoke (main.clj:437)
    clojure.main$repl$fn__9119.invoke (main.clj:458)
    clojure.main$repl.invokeStatic (main.clj:458)
    clojure.main$repl.doInvoke (main.clj:368)
    clojure.lang.RestFn.invoke (RestFn.java:1523)
    nrepl.middleware.interruptible_eval$evaluate.invokeStatic (interruptible_eval.clj:84)
    nrepl.middleware.interruptible_eval$evaluate.invoke (interruptible_eval.clj:56)
    nrepl.middleware.interruptible_eval$interruptible_eval$fn__1298$fn__1302.invoke (interruptible_eval.clj:152)
    clojure.lang.AFn.run (AFn.java:22)
    nrepl.middleware.session$session_exec$main_loop__1368$fn__1372.invoke (session.clj:218)
    nrepl.middleware.session$session_exec$main_loop__1368.invoke (session.clj:217)
    clojure.lang.AFn.run (AFn.java:22)
    java.lang.Thread.run (Thread.java:1583)

Ran 1 tests containing 14 assertions.
0 failures, 1 errors.
{:test 1, :pass 13, :fail 0, :error 1, :type :summary}
clj꞉problems.problem-3꞉> 
#'problems.problem-3/test-subtotal
clj꞉problems.problem-3꞉> 

Testing problems.problem-3

Ran 1 tests containing 13 assertions.
0 failures, 0 errors.
{:test 1, :pass 13, :fail 0, :error 0, :type :summary}
clj꞉problems.problem-3꞉> 
; Syntax error compiling at (src/problems/problem_1.clj:31:1).
; Unable to resolve symbol: filter-invoice-items in this context
clj꞉problems.problem-1꞉> 
nil
clj꞉problems.problem-1꞉> 
#'problems.problem-1/has-iva-19?
clj꞉problems.problem-1꞉> 
#'problems.problem-1/has-ret-fuente-1?
clj꞉problems.problem-1꞉> 
#'problems.problem-1/filter-invoice-items
clj꞉problems.problem-1꞉> 
#'problems.problem-1/invoice
clj꞉problems.problem-1꞉> 
({:invoice-item/id "ii3", :invoice-item/sku "SKU 3", :taxable/taxes [#:tax{:id "t3", :category :iva, :rate 19}]}
 {:invoice-item/id "ii4",
  :invoice-item/sku "SKU 3",
  :retentionable/retentions [#:retention{:id "r2", :category :ret_fuente, :rate 1}]})
clj꞉problems.problem-1꞉> 
